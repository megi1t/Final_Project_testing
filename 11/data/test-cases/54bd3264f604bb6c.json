{"uid":"54bd3264f604bb6c","name":"Successful Registration","fullName":"tests.api_test.LoginAndRegistrationTests#test_successful_registration","historyId":"d25a37f92109fd13458e0f85b3d5f211","time":{"start":1686654300010,"stop":1686654300629,"duration":619},"description":"Test successful registration of a user","descriptionHtml":"<p>Test successful registration of a user</p>\n","status":"failed","statusMessage":"AssertionError: 'The email address you have entered is already registered' != 'success'\n- The email address you have entered is already registered\n+ success","statusTrace":"self = <api_test.LoginAndRegistrationTests testMethod=test_successful_registration>\n\n    @title(\"Successful Registration\")\n    @description(\"Test successful registration of a user\")\n    def test_successful_registration(self):\n        payload = {\"name\": \"Test\",\n                   \"email\": \"test456454@test.com\",\n                   \"password\": \"123GGG\"}\n        response = requests.post(\n            f\"{BASE_URL}/AuthAccount/Registration\", json=payload)\n        self.assertEqual(response.status_code, 200)\n        json_data = response.json()\n        actual_message = json_data[\"message\"]\n        expected_message = \"success\"\n>       self.assertEqual(actual_message, expected_message)\nE       AssertionError: 'The email address you have entered is already registered' != 'success'\nE       - The email address you have entered is already registered\nE       + success\n\ntests/api_test.py:22: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_LoginAndRegistrationTests","time":{"start":1686654299404,"stop":1686654299404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_LoginAndRegistrationTests::0","time":{"start":1686654306377,"stop":1686654306377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"api_test"},{"name":"subSuite","value":"LoginAndRegistrationTests"},{"name":"host","value":"fv-az221-164"},{"name":"thread","value":"2336-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"877d7cae17ab1ee1","reportUrl":"https://megi1t.github.io/Final_Project_testing/10//#testresult/877d7cae17ab1ee1","status":"passed","time":{"start":1686649797945,"stop":1686649798560,"duration":615}},{"uid":"2fb85e73e9b5213d","reportUrl":"https://megi1t.github.io/Final_Project_testing/9//#testresult/2fb85e73e9b5213d","status":"passed","time":{"start":1686649169906,"stop":1686649170412,"duration":506}},{"uid":"723b5906f2b4d4cf","reportUrl":"https://megi1t.github.io/Final_Project_testing/8//#testresult/723b5906f2b4d4cf","status":"passed","time":{"start":1686649124139,"stop":1686649124688,"duration":549}}]},"tags":[]},"source":"54bd3264f604bb6c.json","parameterValues":[]}